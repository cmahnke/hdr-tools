name: Publish Docker images

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

env:
  LIBJXL_VERSION: v0.10.2
  IMAGEMAGICK_VERSION: '7.1.1-33'
  LIBULTRAHDR_GIT_TAG: 'main'
  ADDITIONAL_DEPS: 'ffmpeg bash py3-pip'
  OPENCV_TAG: '4.10.0'
  PYTHON_TAG: '3.12-alpine'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write
  contents: write

jobs:
  setup-matrix:
    name: Create the build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setup-matrix.outputs.matrix }}
    steps:
      - id: setup-matrix
        uses: druzsan/setup-matrix@v2
        with:
          # Use | to preserve valid YAML syntax
          matrix: |
            im_version: [${{ env.IMAGEMAGICK_VERSION }}, main]
            uhdr_version: [${{ env.LIBULTRAHDR_GIT_TAG }}]
            additional_deps: [${{ env.ADDITIONAL_DEPS }}, '']

  build_hdr_tools:
    name: Push hdr-tools Docker image to GitHub Packages
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      # See https://stackoverflow.com/questions/67231657/how-to-replace-string-in-expression-with-github-actions
      - name: Additional dependencies tag
        run: |
          export RAW_ADDITIONAL_DEPS="${{ matrix.additional_deps }}"
          export DEPS_TAG=$(echo "$RAW_ADDITIONAL_DEPS" | tr ' ' '-')
          echo "DEPS_TAG=$DEPS_TAG" >> $GITHUB_ENV
          echo "Contents of $GITHUB_ENV:"
          cat $GITHUB_ENV
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.1.0
        with:
          push: true
          context: .
          file: docker/hdr-tools/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            IM_GIT_TAG=${{ matrix.im_version }}
            LIBULTRAHDR_GIT_TAG=${{ matrix.uhdr_version }}
            ADDITIONAL_DEPS=${{ matrix.additional_deps }}
          tags: |
            ghcr.io/cmahnke/hdr-tools:imagemagick-${{ matrix.im_version }}-uhdr-${{ matrix.uhdr_version }}${{ (matrix.additional_deps != '' ) && format('-{0}', env.DEPS_TAG) || '' }}
            ${{ ( matrix.im_version == 'main' && matrix.uhdr_version == 'main' ) && 'ghcr.io/cmahnke/hdr-tools:latest' || '' }}

  build_python_opencv:
    name: Push Python OpenCV contrib Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v6.1.0
        with:
          push: true
          context: .
          file: docker/python-opencv/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            OPENCV_TAG=${{ env.OPENCV_TAG }}
            TAG=${{ env.PYTHON_TAG }}
          tags: |
            ghcr.io/cmahnke/hdr-tools/python:${{ env.PYTHON_TAG }}-opencv-${{ env.OPENCV_TAG }}
